# Este workflow instala as dependências do Python, executa os testes e faz linting.
# Para mais informações, consulte: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Application

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read  # Permissão para acessar os conteúdos do repositório

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Passo 1: Fazer checkout do código-fonte
    - uses: actions/checkout@v4
    
    # Passo 2: Configurar a versão do Python (3.10 neste caso)
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # Passo 3: Instalar dependências
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Atualiza o pip para a versão mais recente
        pip install flake8 pytest pdfplumber openpyxl PyQt5  # Instala as dependências específicas do seu projeto
        if [ -f requirements.txt ]; then pip install --no-deps -r requirements.txt; fi  # Instala dependências do requirements.txt, ignorando as dependências faltantes

    # Passo 4: Linting com flake8
    - name: Lint with flake8
      run: |
        # Interrompe o build se houver erros de sintaxe Python ou nomes indefinidos
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Trata todos os erros como avisos. A largura do editor do GitHub é de 127 caracteres
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Passo 5: Testes com pytest
    - name: Test with pytest
      run: |
        pytest --maxfail=1 --disable-warnings --quiet  # Limita a falha a 1 e desabilita avisos

